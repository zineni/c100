local Players = game:GetService("Players")
local targetFrame = game:GetService("CoreGui").PlayerList.Children.OffsetFrame.PlayerScrollList.SizeOffsetFrame.ScrollingFrameContainer.ScrollingFrameClippingFrame.ScollingFrame.OffsetUndoFrame
local targetPlayer = Players.LocalPlayer

local function getTitle(rep)
    if rep < 0 then
        if rep <= -50000 then return "Legend of Chaos"
        elseif rep <= -20000 then return "Nemesis"
        elseif rep <= -10000 then return "Dreadlord"
        elseif rep <= -5000 then return "Executioner"
        elseif rep <= -2000 then return "Brutalizer"
        elseif rep <= -1000 then return "Reckless"
        elseif rep <= -500 then return "Warlord"
        elseif rep <= -200 then return "Bloodthirsty"
        elseif rep <= -100 then return "PlayerKiller"
        elseif rep <= -50 then return "Desperado"
        elseif rep <= -20 then return "Bandit"
        elseif rep <= -10 then return "Rogue"
        elseif rep <= -5 then return "Troublemaker"
        else return "Outlaw"
        end
    elseif rep > 0 then
        if rep >= 50000 then return "Paragon"
        elseif rep >= 20000 then return "Exalted"
        elseif rep >= 10000 then return "Ascendant"
        elseif rep >= 5000 then return "Immortal"
        elseif rep >= 2000 then return "Mythic"
        elseif rep >= 1000 then return "Legend"
        elseif rep >= 500 then return "Hero"
        elseif rep >= 200 then return "Champion"
        elseif rep >= 100 then return "Elite"
        elseif rep >= 50 then return "Veteran"
        elseif rep >= 20 then return "Skilled"
        elseif rep >= 10 then return "Adept"
        elseif rep >= 5 then return "Apprentice"
        else return "Novice"
        end
    else
        return "Neutral"
    end
end

local function getTitleColor(rep)
    if rep < 0 then
        if rep <= -50000 then return "#1B040F"
        elseif rep <= -20000 then return "#2E0826"
        elseif rep <= -10000 then return "#3B0A2F"
        elseif rep <= -5000 then return "#4A0B3B"
        elseif rep <= -2000 then return "#6A0D4D"
        elseif rep <= -1000 then return "#880E4F"
        elseif rep <= -500 then return "#AD1457"
        elseif rep <= -200 then return "#C2185B"
        elseif rep <= -100 then return "#D81B60"
        elseif rep <= -50 then return "#E91E63"
        elseif rep <= -20 then return "#EC407A"
        elseif rep <= -10 then return "#F06292"
        elseif rep <= -5 then return "#F48FB1"
        else return "#F8BBD0"
        end
    elseif rep > 0 then
        if rep >= 50000 then return "#BF360C"
        elseif rep >= 20000 then return "#D84315"
        elseif rep >= 10000 then return "#E64A19"
        elseif rep >= 5000 then return "#FF5722"
        elseif rep >= 2000 then return "#FF6F00"
        elseif rep >= 1000 then return "#FF8F00"
        elseif rep >= 500 then return "#FFA000"
        elseif rep >= 200 then return "#FFB300"
        elseif rep >= 100 then return "#FFC107"
        elseif rep >= 50 then return "#FFD700"
        elseif rep >= 20 then return "#3B7A3B"
        elseif rep >= 10 then return "#4CAF50"
        elseif rep >= 5 then return "#7CC47F"
        else return "#A8D5BA"
        end
    else
        return "#FFFFFF" -- нейтральный белый
    end
end

local function Titul()
	if targetPlayer and targetPlayer:FindFirstChild("PrivateStats") and targetPlayer.PrivateStats:FindFirstChild("Reputation") then
		local rep = targetPlayer.PrivateStats.Reputation.Value
		local title = getTitle(rep)
		if title then
			local playerGui = Players.LocalPlayer:FindFirstChild("PlayerGui")
			if playerGui and playerGui:FindFirstChild("ScreenGui") and playerGui.ScreenGui:FindFirstChild("MenuFrame") and
			playerGui.ScreenGui.MenuFrame:FindFirstChild("InfoFrame") and playerGui.ScreenGui.MenuFrame.InfoFrame:FindFirstChild("StatusTxt") then
				playerGui.ScreenGui.MenuFrame.InfoFrame.StatusTxt.Text = "Status : " .. title
			end
		end
	end
end

local function TabRemove()
	local Players = game:GetService("Players")

	local function getDescendantByPath(root, path)
		local current = root
		for _, name in ipairs(path) do
			if current then
				current = current:FindFirstChild(name)
			else
				return nil
			end
		end
		return current
	end

	local function findPlayerByDisplayName(displayName)
		for _, player in ipairs(Players:GetPlayers()) do
			if player.Name == displayName or player.DisplayName == displayName then
				return player
			end
		end
		return nil
	end

	local CoreGui = game:GetService("CoreGui")
	local playerList = CoreGui:FindFirstChild("PlayerList")
	if not playerList then
		warn("PlayerList not found")
		return
	end

	local offsetFrame = playerList:FindFirstChild("Children")
	if not offsetFrame then
		warn("Children not found")
		return
	end

	offsetFrame = offsetFrame:FindFirstChild("OffsetFrame")
	if not offsetFrame then
		warn("OffsetFrame not found")
		return
	end

	local playerScrollList = offsetFrame:FindFirstChild("PlayerScrollList")
	if not playerScrollList then
		warn("PlayerScrollList not found")
		return
	end

	local sizeOffsetFrame = playerScrollList:FindFirstChild("SizeOffsetFrame")
	if not sizeOffsetFrame then
		warn("SizeOffsetFrame not found")
		return
	end

	local scrollingFrameContainer = sizeOffsetFrame:FindFirstChild("ScrollingFrameContainer")
	if not scrollingFrameContainer then
		warn("ScrollingFrameContainer not found")
		return
	end

	local scrollingFrameClippingFrame = scrollingFrameContainer:FindFirstChild("ScrollingFrameClippingFrame")
	if not scrollingFrameClippingFrame then
		warn("ScrollingFrameClippingFrame not found")
		return
	end

	local scrollingFrame = scrollingFrameClippingFrame:FindFirstChild("ScollingFrame")
	if not scrollingFrame then
		warn("ScollingFrame not found")
		return
	end

	local offsetUndoFrame = scrollingFrame:FindFirstChild("OffsetUndoFrame")
	if not offsetUndoFrame then
		warn("OffsetUndoFrame not found")
		return
	end

	local statTextPath = {"ChildrenFrame", "GameStat_Status", "OverlayFrame", "StatText"}
	local playerNamePath = {"ChildrenFrame", "NameFrame", "BGFrame", "OverlayFrame", "PlayerName", "PlayerName"}

	for _, child in ipairs(offsetUndoFrame:GetChildren()) do
		local statTextObj = getDescendantByPath(child, statTextPath)
		local displayNameObj = getDescendantByPath(child, playerNamePath)
		local displayName = displayNameObj and displayNameObj.Text or "Unknown"
		local player = findPlayerByDisplayName(displayName)
		local realName = player and player.Name or "UnknownPlayer"
		local title = (statTextObj and statTextObj:IsA("TextLabel")) and statTextObj.Text or "NoTitle"
		local rep = player.PrivateStats.Reputation.Value
		local title = getTitle(rep)
		statTextObj.Text = title
		-- print("Player: "..realName.." (displayed as "..displayName..") - Title: "..title)
	end
end
local LocalPlayer = Players.LocalPlayer
local Players = game:GetService("Players")

local function ChatTitul()
    local PlayerGui = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
    if not PlayerGui then
        warn("PlayerGui not found")
        return
    end

    local LocalPlayerChat = PlayerGui:FindFirstChild("Chat")
    if not LocalPlayerChat then
        warn("LocalPlayerChat not found")
        return
    end

    local Frame = LocalPlayerChat:FindFirstChild("Frame")
    if not Frame then
        warn("Frame not found")
        return
    end

    local ChatChannelParentFrame = Frame:FindFirstChild("ChatChannelParentFrame")
    if not ChatChannelParentFrame then
        warn("ChatChannelParentFrame not found")
        return
    end

    local Frame_MessageLogDisplay = ChatChannelParentFrame:FindFirstChild("Frame_MessageLogDisplay")
    if not Frame_MessageLogDisplay then
        warn("Frame_MessageLogDisplay not found")
        return
    end

    local Scroller = Frame_MessageLogDisplay:FindFirstChild("Scroller")
    if not Scroller then
        warn("Scroller not found")
        return
    end

    for _, child in ipairs(Scroller:GetChildren()) do
        local TextLabel = child:FindFirstChild("TextLabel")
        if TextLabel then
            local TextButton = TextLabel:FindFirstChild("TextButton")
            if TextButton then
                local currentText = TextButton.Text
                local title, usernameWithColon = currentText:match("^(.-) (.+)$")
                if title and usernameWithColon then
                    local username = usernameWithColon:gsub(":", "")
                    local player = game.Players:FindFirstChild(username)
                    if player and player:FindFirstChild("PrivateStats") and player.PrivateStats:FindFirstChild("Reputation") then
                        local rep = player.PrivateStats.Reputation.Value
                        local newTitle = getTitle(rep)
                        local spaces = string.rep(" ", #newTitle - #title)
                        local message = currentText:match(" " .. usernameWithColon .. "$")
						TextButton.Text = " "
						local originalText = TextLabel.Text
						local trimmedText = originalText:gsub("^%s+", "")
						TextLabel.RichText = true
						local color = getTitleColor(rep)
						TextLabel.Text = string.format('<font color="%s">[%s]</font> <font color="#FFFFFF">%s</font> %s', color, newTitle, username, trimmedText)
                    else
                        -- warn("Player not found or PrivateStats missing for: " .. username)
                    end
                else
                    -- warn("Couldn't extract title and username from: " .. currentText)
                end
            else
                -- warn("TextButton not found in TextLabel")
            end
        else
            -- warn("TextLabel not found in child")
        end
    end
end

coroutine.wrap(function()
	while true do
		Titul()
		TabRemove()
		ChatTitul()
		wait(1)
	end
end)()
